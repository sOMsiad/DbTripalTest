// <auto-generated />
using System;
using DbTripalTest.LoanModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DbTripalTest.Migrations
{
    [DbContext(typeof(TripalDbContext))]
    partial class TripalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Polish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DbTripalTest.LoanModels.Pakiet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime");

                    b.Property<int?>("IloscProduktow")
                        .HasColumnType("int");

                    b.Property<int?>("NumerPakietu")
                        .HasColumnType("int");

                    b.Property<int?>("Obrot")
                        .HasColumnType("int");

                    b.Property<int?>("OrientacjaPobrania")
                        .HasColumnType("int");

                    b.Property<int>("WarstwaId")
                        .HasColumnType("int");

                    b.Property<int?>("WymiarX")
                        .HasColumnType("int");

                    b.Property<int?>("WymiarY")
                        .HasColumnType("int");

                    b.Property<int?>("X")
                        .HasColumnType("int");

                    b.Property<int?>("Xoff")
                        .HasColumnType("int");

                    b.Property<int?>("Y")
                        .HasColumnType("int");

                    b.Property<int?>("Yoff")
                        .HasColumnType("int");

                    b.Property<int?>("Z")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarstwaId");

                    b.ToTable("Pakiety");
                });

            modelBuilder.Entity("DbTripalTest.LoanModels.Paleta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Dlugosc")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Szerokosc")
                        .HasColumnType("int");

                    b.Property<int>("Wysokosc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Palety");
                });

            modelBuilder.Entity("DbTripalTest.LoanModels.Poziomy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<int>("NumerPoziomu")
                        .HasColumnType("int");

                    b.Property<bool>("PaletaJakoPrzekladka")
                        .HasColumnType("bit");

                    b.Property<bool>("Przekladka")
                        .HasColumnType("bit");

                    b.Property<int>("UkladId")
                        .HasColumnType("int");

                    b.Property<int>("WarstwaId")
                        .HasColumnType("int");

                    b.Property<int>("WysokoscWarstwy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UkladId");

                    b.HasIndex("WarstwaId");

                    b.ToTable("Poziomy");
                });

            modelBuilder.Entity("DbTripalTest.LoanModels.Produkt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("A")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("B")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataOstatniejAktualizacji")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("DataOstatniejAktualizacji");

                    b.Property<DateTime>("DataUtworzenia")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("DataUworzenia")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("IloscWejsciowa")
                        .HasColumnType("int");

                    b.Property<string>("NazwaProduktu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WagaProduktu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Produkty");
                });

            modelBuilder.Entity("DbTripalTest.LoanModels.Uklad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IloscWarstw")
                        .HasColumnType("int");

                    b.Property<string>("NazwaUkladu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaletaId")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaletaId");

                    b.HasIndex("ProduktId");

                    b.ToTable("Uklady");
                });

            modelBuilder.Entity("DbTripalTest.LoanModels.Warstwa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataOstatniejAktualizacji")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("DataOstatniejAktualizacji")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime>("DataUtworzenia")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("DataUworzenia")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduktId");

                    b.ToTable("Warstwy");
                });

            modelBuilder.Entity("DbTripalTest.LoanModels.Pakiet", b =>
                {
                    b.HasOne("DbTripalTest.LoanModels.Warstwa", "Warstwa")
                        .WithMany("Pakiety")
                        .HasForeignKey("WarstwaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warstwa");
                });

            modelBuilder.Entity("DbTripalTest.LoanModels.Poziomy", b =>
                {
                    b.HasOne("DbTripalTest.LoanModels.Uklad", "Uklad")
                        .WithMany("UkladWarstw")
                        .HasForeignKey("UkladId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbTripalTest.LoanModels.Warstwa", "Warstwa")
                        .WithMany("Poziomy")
                        .HasForeignKey("WarstwaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Uklad");

                    b.Navigation("Warstwa");
                });

            modelBuilder.Entity("DbTripalTest.LoanModels.Uklad", b =>
                {
                    b.HasOne("DbTripalTest.LoanModels.Paleta", "Paleta")
                        .WithMany("Uklady")
                        .HasForeignKey("PaletaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DbTripalTest.LoanModels.Produkt", "Produkt")
                        .WithMany("Uklady")
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paleta");

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("DbTripalTest.LoanModels.Warstwa", b =>
                {
                    b.HasOne("DbTripalTest.LoanModels.Produkt", "Produkt")
                        .WithMany("Warstwy")
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("DbTripalTest.LoanModels.Paleta", b =>
                {
                    b.Navigation("Uklady");
                });

            modelBuilder.Entity("DbTripalTest.LoanModels.Produkt", b =>
                {
                    b.Navigation("Uklady");

                    b.Navigation("Warstwy");
                });

            modelBuilder.Entity("DbTripalTest.LoanModels.Uklad", b =>
                {
                    b.Navigation("UkladWarstw");
                });

            modelBuilder.Entity("DbTripalTest.LoanModels.Warstwa", b =>
                {
                    b.Navigation("Pakiety");

                    b.Navigation("Poziomy");
                });
#pragma warning restore 612, 618
        }
    }
}
